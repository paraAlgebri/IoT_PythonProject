version: "3.12"
name: "road_vision"
services:
  mqtt:
    image: eclipse-mosquitto
    container_name: mqtt
    volumes:
      - ./mosquitto:/mosquitto
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log
    ports:
      - 1883:1883
      - 9001:9001
    networks:
      - mqtt_network
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  postgres_db:
    image: postgres:latest
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: test_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/structure.sql:/docker-entrypoint-initdb.d/structure.sql
    ports:
      - "5432:5432"
    networks:
      - db_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d test_db"]
      interval: 5s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - hub_redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  store:
    container_name: store
    image: python:3.12
    working_dir: /app
    volumes:
      - ../:/app
    command: >
      bash -c "cd /app && 
      pip install -r requirements.txt && 
      PYTHONPATH=/app python -u app/interfaces/store_gateway.py & 
      tail -f /dev/null"
    depends_on:
      postgres_db:
        condition: service_healthy
    restart: on-failure:5
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: test_db
      POSTGRES_HOST: postgres_db
      POSTGRES_PORT: 5432
      PYTHONPATH: /app
      PYTHONUNBUFFERED: 1
    ports:
      - "8000:8000"
    networks:
      - hub_store
      - db_network
      - hub
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  edge:
    container_name: edge
    image: python:3.12
    working_dir: /app
    volumes:
      - ../:/app
    command: >
      bash -c "cd /app && 
      pip install -r requirements.txt && 
      PYTHONPATH=/app python -u main.py"
    depends_on:
      mqtt:
        condition: service_started
      hub:
        condition: service_started
    restart: on-failure:5
    environment:
      MQTT_BROKER_HOST: "mqtt"
      MQTT_BROKER_PORT: 1883
      MQTT_TOPIC: "agent_data_topic"
      HUB_HOST: "hub"
      HUB_PORT: 8000
      HUB_MQTT_BROKER_HOST: "mqtt"
      HUB_MQTT_BROKER_PORT: 1883
      HUB_MQTT_TOPIC: "processed_data_topic"
      PYTHONPATH: /app
      PYTHONUNBUFFERED: 1
    networks:
      - mqtt_network
      - edge_hub
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  hub:
    container_name: hub
    image: python:3.12
    working_dir: /app
    volumes:
      - ../:/app
    command: >
      bash -c "cd /app && 
      pip install -r requirements.txt && 
      PYTHONPATH=/app python -u app/interfaces/hub_gateway.py &
      tail -f /dev/null"
    depends_on:
      mqtt:
        condition: service_started
      redis:
        condition: service_healthy
      store:
        condition: service_started
    restart: on-failure:5
    environment:
      STORE_API_HOST: "store"
      STORE_API_PORT: 8000
      REDIS_HOST: "redis"
      REDIS_PORT: 6379
      MQTT_BROKER_HOST: "mqtt"
      MQTT_BROKER_PORT: 1883
      MQTT_TOPIC: "processed_data_topic"
      PYTHONPATH: /app
      PYTHONUNBUFFERED: 1
    networks:
      - mqtt_network
      - hub_redis
      - hub_store
      - hub
      - edge_hub
    ports:
      - "8001:8000"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  agent:
    container_name: agent
    image: python:3.12
    working_dir: /app
    volumes:
      - ../:/app
    command: >
      bash -c "cd /app && 
      pip install -r requirements.txt && 
      PYTHONPATH=/app python -u app/interfaces/agent_gateway.py &
      tail -f /dev/null"
    depends_on:
      mqtt:
        condition: service_started
    restart: on-failure:5
    environment:
      MQTT_BROKER_HOST: "mqtt"
      MQTT_BROKER_PORT: 1883
      MQTT_TOPIC: "agent_data_topic"
      PYTHONPATH: /app
      PYTHONUNBUFFERED: 1
    networks:
      - mqtt_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  mqtt_network:
    driver: bridge
  db_network:
    driver: bridge
  hub_redis:
    driver: bridge
  hub_store:
    driver: bridge
  hub:
    driver: bridge
  edge_hub:
    driver: bridge

volumes:
  postgres_data:
  pgadmin-data: